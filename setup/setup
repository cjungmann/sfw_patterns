#!/bin/bash

dbase=SFW_Patterns

remove_from_array()
{
    local needle="${1}"
    local haystack=( "${@:2}" )
    local straw
    for straw in "${haystack[@]}"; do
        if [ "$straw" != "$needle" ]; then
            echo "$straw"
        fi
    done
}

remove_from_array()
{
    local needle="${1}"
    local haystack=( "${@:2}" )
    local straw
    for straw in "${haystack[@]}"; do
        if [ "$straw" != "$needle" ]; then
            echo "$straw"
        fi
    done
}

create_missing_directories()
{
    cd ..
    if [ ! -d generated ]; then
        echo "Creating directory 'generated'" >&2
        mkdir generated
    fi
    if [ ! -d site ]; then
        echo "Creating directory 'site'" >&2
        mkdir site
    fi
    if [ ! -d custom ]; then
        echo "Creating directory 'custom'" >&2
        mkdir custom
    fi

    cd setup
}

copy_and_modify_default_stylesheet()
{
    sed "s|\*\*Default.*\*\*|Schema Framework Code Patterns|g" /usr/local/lib/schemafw/default.xsl > ../site/default.xsl
}

install_framework_to_site()
{
   cd ../site

   if [  -d includes ]; then
       echo "Framework already installed" >&2
   else
       ln -s /usr/local/lib/schemafw/web_includes includes
       copy_and_modify_default_stylesheet
   fi

   cd ../setup
}

create_database()
{
    # -r (raw) to omit tabular ouput
    # -N (--skip-column-names)
    local -a cmd=(
        information_schema
        -r
        -N
        -e "SELECT COUNT(*) FROM SCHEMATA WHERE SCHEMA_NAME='$dbase'"
    )

    local -i is_installed=$( mysql "${cmd[@]}" )

    if [ $is_installed -eq 0 ]; then
        echo "Creating a new database"
        mysql -e "CREATE DATABASE IF NOT EXISTS $dbase"
        echo "Loading script files"
        mysql -f "${dbase}" < /usr/local/lib/SchemaServer/install/sys_procs.sql
    fi
}


create_autoload_srm()
{
    cd ../site

    local -a lines=(
        "\$shared : autoload_page"
        "   navigation")

    local -a srmfiles=( $( ls *.srm ) )
    local -a files=( $( remove_from_array "autorun.srm" "${srmfiles[@]}" ) )

    local sname bname
    for sname in "${files[@]}"; do
        if [[ "${sname}" =~ (.*)\.srm ]]; then
            tname="${BASH_REMATCH[1]}"
            lines=( "${lines[@]}"
                    "      target"
                    "         label : ${tname}"
                    "         url   : ${sname}"
                  )
        fi
    done

    printf "%s\n" "${lines[@]}" > autoload.srm

    cd ../setup
}

distribute_custom_files()
{
    cd ../site
    cp -sf ../custom/*.srm .

    cd ../setup
    cp -sf ../custom/*.sql .
}

load_scripts()
{
    cd ../setup

    local -a sqlfiles=( $( ls *.sql ) )
    local -a scripts=( $( remove_from_array "tables.sql" "${sqlfiles[@]}" ) )

    mysql "$dbase" < tables.sql

    for script in "${scripts[@]}"; do
        echo "Loading script file ${script}:"
        mysql "$dbase" < "${script}"
    done
}

create_missing_directories
install_framework_to_site

create_database
distribute_custom_files
create_autoload_srm
load_scripts
